// Code generated by MockGen. DO NOT EDIT.
// Source: node.go
//
// Generated by this command:
//
//	mockgen -source node.go -destination node_mock.go -package graph
//

// Package graph is a generated GoMock package.
package graph

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockNode is a mock of Node interface.
type MockNode struct {
	ctrl     *gomock.Controller
	recorder *MockNodeMockRecorder
}

// MockNodeMockRecorder is the mock recorder for MockNode.
type MockNodeMockRecorder struct {
	mock *MockNode
}

// NewMockNode creates a new mock instance.
func NewMockNode(ctrl *gomock.Controller) *MockNode {
	mock := &MockNode{ctrl: ctrl}
	mock.recorder = &MockNodeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNode) EXPECT() *MockNodeMockRecorder {
	return m.recorder
}

// AddEdge mocks base method.
func (m *MockNode) AddEdge(arg0 Edge) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddEdge", arg0)
}

// AddEdge indicates an expected call of AddEdge.
func (mr *MockNodeMockRecorder) AddEdge(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddEdge", reflect.TypeOf((*MockNode)(nil).AddEdge), arg0)
}

// DeleteEdge mocks base method.
func (m *MockNode) DeleteEdge(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteEdge", arg0)
}

// DeleteEdge indicates an expected call of DeleteEdge.
func (mr *MockNodeMockRecorder) DeleteEdge(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEdge", reflect.TypeOf((*MockNode)(nil).DeleteEdge), arg0)
}

// GetEdges mocks base method.
func (m *MockNode) GetEdges() map[string]Edge {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEdges")
	ret0, _ := ret[0].(map[string]Edge)
	return ret0
}

// GetEdges indicates an expected call of GetEdges.
func (mr *MockNodeMockRecorder) GetEdges() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEdges", reflect.TypeOf((*MockNode)(nil).GetEdges))
}

// GetFlexibleAlgorithms mocks base method.
func (m *MockNode) GetFlexibleAlgorithms() map[uint32]struct{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFlexibleAlgorithms")
	ret0, _ := ret[0].(map[uint32]struct{})
	return ret0
}

// GetFlexibleAlgorithms indicates an expected call of GetFlexibleAlgorithms.
func (mr *MockNodeMockRecorder) GetFlexibleAlgorithms() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFlexibleAlgorithms", reflect.TypeOf((*MockNode)(nil).GetFlexibleAlgorithms))
}

// GetId mocks base method.
func (m *MockNode) GetId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetId")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetId indicates an expected call of GetId.
func (mr *MockNodeMockRecorder) GetId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetId", reflect.TypeOf((*MockNode)(nil).GetId))
}

// GetName mocks base method.
func (m *MockNode) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockNodeMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockNode)(nil).GetName))
}

// SetFlexibleAlgorithms mocks base method.
func (m *MockNode) SetFlexibleAlgorithms(arg0 []uint32) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetFlexibleAlgorithms", arg0)
}

// SetFlexibleAlgorithms indicates an expected call of SetFlexibleAlgorithms.
func (mr *MockNodeMockRecorder) SetFlexibleAlgorithms(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetFlexibleAlgorithms", reflect.TypeOf((*MockNode)(nil).SetFlexibleAlgorithms), arg0)
}

// SetName mocks base method.
func (m *MockNode) SetName(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetName", arg0)
}

// SetName indicates an expected call of SetName.
func (mr *MockNodeMockRecorder) SetName(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetName", reflect.TypeOf((*MockNode)(nil).SetName), arg0)
}
