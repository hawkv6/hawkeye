// Code generated by MockGen. DO NOT EDIT.
// Source: path.go
//
// Generated by this command:
//
//	mockgen -source path.go -destination path_mock.go -package graph
//

// Package graph is a generated GoMock package.
package graph

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPath is a mock of Path interface.
type MockPath struct {
	ctrl     *gomock.Controller
	recorder *MockPathMockRecorder
}

// MockPathMockRecorder is the mock recorder for MockPath.
type MockPathMockRecorder struct {
	mock *MockPath
}

// NewMockPath creates a new mock instance.
func NewMockPath(ctrl *gomock.Controller) *MockPath {
	mock := &MockPath{ctrl: ctrl}
	mock.recorder = &MockPathMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPath) EXPECT() *MockPathMockRecorder {
	return m.recorder
}

// GetBottleneckEdge mocks base method.
func (m *MockPath) GetBottleneckEdge() Edge {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBottleneckEdge")
	ret0, _ := ret[0].(Edge)
	return ret0
}

// GetBottleneckEdge indicates an expected call of GetBottleneckEdge.
func (mr *MockPathMockRecorder) GetBottleneckEdge() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBottleneckEdge", reflect.TypeOf((*MockPath)(nil).GetBottleneckEdge))
}

// GetBottleneckValue mocks base method.
func (m *MockPath) GetBottleneckValue() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBottleneckValue")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetBottleneckValue indicates an expected call of GetBottleneckValue.
func (mr *MockPathMockRecorder) GetBottleneckValue() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBottleneckValue", reflect.TypeOf((*MockPath)(nil).GetBottleneckValue))
}

// GetEdges mocks base method.
func (m *MockPath) GetEdges() []Edge {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEdges")
	ret0, _ := ret[0].([]Edge)
	return ret0
}

// GetEdges indicates an expected call of GetEdges.
func (mr *MockPathMockRecorder) GetEdges() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEdges", reflect.TypeOf((*MockPath)(nil).GetEdges))
}

// GetRouterServiceMap mocks base method.
func (m *MockPath) GetRouterServiceMap() map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRouterServiceMap")
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// GetRouterServiceMap indicates an expected call of GetRouterServiceMap.
func (mr *MockPathMockRecorder) GetRouterServiceMap() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRouterServiceMap", reflect.TypeOf((*MockPath)(nil).GetRouterServiceMap))
}

// GetTotalCost mocks base method.
func (m *MockPath) GetTotalCost() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalCost")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetTotalCost indicates an expected call of GetTotalCost.
func (mr *MockPathMockRecorder) GetTotalCost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalCost", reflect.TypeOf((*MockPath)(nil).GetTotalCost))
}

// GetTotalDelay mocks base method.
func (m *MockPath) GetTotalDelay() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalDelay")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetTotalDelay indicates an expected call of GetTotalDelay.
func (mr *MockPathMockRecorder) GetTotalDelay() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalDelay", reflect.TypeOf((*MockPath)(nil).GetTotalDelay))
}

// GetTotalJitter mocks base method.
func (m *MockPath) GetTotalJitter() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalJitter")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetTotalJitter indicates an expected call of GetTotalJitter.
func (mr *MockPathMockRecorder) GetTotalJitter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalJitter", reflect.TypeOf((*MockPath)(nil).GetTotalJitter))
}

// GetTotalPacketLoss mocks base method.
func (m *MockPath) GetTotalPacketLoss() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalPacketLoss")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetTotalPacketLoss indicates an expected call of GetTotalPacketLoss.
func (mr *MockPathMockRecorder) GetTotalPacketLoss() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalPacketLoss", reflect.TypeOf((*MockPath)(nil).GetTotalPacketLoss))
}

// SetBottleneckEdge mocks base method.
func (m *MockPath) SetBottleneckEdge(arg0 Edge) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetBottleneckEdge", arg0)
}

// SetBottleneckEdge indicates an expected call of SetBottleneckEdge.
func (mr *MockPathMockRecorder) SetBottleneckEdge(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetBottleneckEdge", reflect.TypeOf((*MockPath)(nil).SetBottleneckEdge), arg0)
}

// SetBottleneckValue mocks base method.
func (m *MockPath) SetBottleneckValue(arg0 float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetBottleneckValue", arg0)
}

// SetBottleneckValue indicates an expected call of SetBottleneckValue.
func (mr *MockPathMockRecorder) SetBottleneckValue(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetBottleneckValue", reflect.TypeOf((*MockPath)(nil).SetBottleneckValue), arg0)
}

// SetRouterServiceMap mocks base method.
func (m *MockPath) SetRouterServiceMap(arg0 map[string]string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetRouterServiceMap", arg0)
}

// SetRouterServiceMap indicates an expected call of SetRouterServiceMap.
func (mr *MockPathMockRecorder) SetRouterServiceMap(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetRouterServiceMap", reflect.TypeOf((*MockPath)(nil).SetRouterServiceMap), arg0)
}

// SetTotalCost mocks base method.
func (m *MockPath) SetTotalCost(arg0 float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTotalCost", arg0)
}

// SetTotalCost indicates an expected call of SetTotalCost.
func (mr *MockPathMockRecorder) SetTotalCost(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTotalCost", reflect.TypeOf((*MockPath)(nil).SetTotalCost), arg0)
}

// SetTotalDelay mocks base method.
func (m *MockPath) SetTotalDelay(arg0 float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTotalDelay", arg0)
}

// SetTotalDelay indicates an expected call of SetTotalDelay.
func (mr *MockPathMockRecorder) SetTotalDelay(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTotalDelay", reflect.TypeOf((*MockPath)(nil).SetTotalDelay), arg0)
}

// SetTotalJitter mocks base method.
func (m *MockPath) SetTotalJitter(arg0 float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTotalJitter", arg0)
}

// SetTotalJitter indicates an expected call of SetTotalJitter.
func (mr *MockPathMockRecorder) SetTotalJitter(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTotalJitter", reflect.TypeOf((*MockPath)(nil).SetTotalJitter), arg0)
}

// SetTotalPacketLoss mocks base method.
func (m *MockPath) SetTotalPacketLoss(arg0 float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTotalPacketLoss", arg0)
}

// SetTotalPacketLoss indicates an expected call of SetTotalPacketLoss.
func (mr *MockPathMockRecorder) SetTotalPacketLoss(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTotalPacketLoss", reflect.TypeOf((*MockPath)(nil).SetTotalPacketLoss), arg0)
}
