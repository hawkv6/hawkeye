// Code generated by MockGen. DO NOT EDIT.
// Source: config.go
//
// Generated by this command:
//
//	mockgen -source config.go -destination config_mock.go -package config
//

// Package config is a generated GoMock package.
package config

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockConfig is a mock of Config interface.
type MockConfig struct {
	ctrl     *gomock.Controller
	recorder *MockConfigMockRecorder
}

// MockConfigMockRecorder is the mock recorder for MockConfig.
type MockConfigMockRecorder struct {
	mock *MockConfig
}

// NewMockConfig creates a new mock instance.
func NewMockConfig(ctrl *gomock.Controller) *MockConfig {
	mock := &MockConfig{ctrl: ctrl}
	mock.recorder = &MockConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfig) EXPECT() *MockConfigMockRecorder {
	return m.recorder
}

// GetGrpcPort mocks base method.
func (m *MockConfig) GetGrpcPort() uint16 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGrpcPort")
	ret0, _ := ret[0].(uint16)
	return ret0
}

// GetGrpcPort indicates an expected call of GetGrpcPort.
func (mr *MockConfigMockRecorder) GetGrpcPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGrpcPort", reflect.TypeOf((*MockConfig)(nil).GetGrpcPort))
}

// GetJagwRequestPort mocks base method.
func (m *MockConfig) GetJagwRequestPort() uint16 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJagwRequestPort")
	ret0, _ := ret[0].(uint16)
	return ret0
}

// GetJagwRequestPort indicates an expected call of GetJagwRequestPort.
func (mr *MockConfigMockRecorder) GetJagwRequestPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJagwRequestPort", reflect.TypeOf((*MockConfig)(nil).GetJagwRequestPort))
}

// GetJagwServiceAddress mocks base method.
func (m *MockConfig) GetJagwServiceAddress() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJagwServiceAddress")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetJagwServiceAddress indicates an expected call of GetJagwServiceAddress.
func (mr *MockConfigMockRecorder) GetJagwServiceAddress() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJagwServiceAddress", reflect.TypeOf((*MockConfig)(nil).GetJagwServiceAddress))
}

// GetJagwSubscriptionPort mocks base method.
func (m *MockConfig) GetJagwSubscriptionPort() uint16 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJagwSubscriptionPort")
	ret0, _ := ret[0].(uint16)
	return ret0
}

// GetJagwSubscriptionPort indicates an expected call of GetJagwSubscriptionPort.
func (mr *MockConfigMockRecorder) GetJagwSubscriptionPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJagwSubscriptionPort", reflect.TypeOf((*MockConfig)(nil).GetJagwSubscriptionPort))
}
