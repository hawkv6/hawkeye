// Code generated by MockGen. DO NOT EDIT.
// Source: calculation_setup.go
//
// Generated by this command:
//
//	mockgen -source calculation_setup.go -destination calculation_setup_mock.go -package calculation
//

// Package calculation is a generated GoMock package.
package calculation

import (
	reflect "reflect"

	domain "github.com/hawkv6/hawkeye/pkg/domain"
	helper "github.com/hawkv6/hawkeye/pkg/helper"
	gomock "go.uber.org/mock/gomock"
)

// MockCalculationSetup is a mock of CalculationSetup interface.
type MockCalculationSetup struct {
	ctrl     *gomock.Controller
	recorder *MockCalculationSetupMockRecorder
}

// MockCalculationSetupMockRecorder is the mock recorder for MockCalculationSetup.
type MockCalculationSetupMockRecorder struct {
	mock *MockCalculationSetup
}

// NewMockCalculationSetup creates a new mock instance.
func NewMockCalculationSetup(ctrl *gomock.Controller) *MockCalculationSetup {
	mock := &MockCalculationSetup{ctrl: ctrl}
	mock.recorder = &MockCalculationSetupMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCalculationSetup) EXPECT() *MockCalculationSetupMockRecorder {
	return m.recorder
}

// GetWeightKeysandCalculationMode mocks base method.
func (m *MockCalculationSetup) GetWeightKeysandCalculationMode(intents []domain.Intent) ([]helper.WeightKey, CalculationMode) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWeightKeysandCalculationMode", intents)
	ret0, _ := ret[0].([]helper.WeightKey)
	ret1, _ := ret[1].(CalculationMode)
	return ret0, ret1
}

// GetWeightKeysandCalculationMode indicates an expected call of GetWeightKeysandCalculationMode.
func (mr *MockCalculationSetupMockRecorder) GetWeightKeysandCalculationMode(intents any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWeightKeysandCalculationMode", reflect.TypeOf((*MockCalculationSetup)(nil).GetWeightKeysandCalculationMode), intents)
}

// PerformServiceFunctionChainSetup mocks base method.
func (m *MockCalculationSetup) PerformServiceFunctionChainSetup(intent domain.Intent) (*SfcCalculationOptions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PerformServiceFunctionChainSetup", intent)
	ret0, _ := ret[0].(*SfcCalculationOptions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PerformServiceFunctionChainSetup indicates an expected call of PerformServiceFunctionChainSetup.
func (mr *MockCalculationSetupMockRecorder) PerformServiceFunctionChainSetup(intent any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PerformServiceFunctionChainSetup", reflect.TypeOf((*MockCalculationSetup)(nil).PerformServiceFunctionChainSetup), intent)
}

// PerformSetup mocks base method.
func (m *MockCalculationSetup) PerformSetup(pathRequest domain.PathRequest) (*CalculationOptions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PerformSetup", pathRequest)
	ret0, _ := ret[0].(*CalculationOptions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PerformSetup indicates an expected call of PerformSetup.
func (mr *MockCalculationSetupMockRecorder) PerformSetup(pathRequest any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PerformSetup", reflect.TypeOf((*MockCalculationSetup)(nil).PerformSetup), pathRequest)
}
